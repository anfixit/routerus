#!/bin/bash

# WireGuard Maximum Obfuscation Setup - Interactive Configuration
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∫–ª—é—á–µ–π

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# –§–∞–π–ª—ã
ENV_FILE=".env"
ENV_EXAMPLE=".env.example"

# –õ–æ–≥–æ
show_logo() {
    echo -e "${CYAN}"
    cat << "EOF"
    ‚ï¶‚ïê‚ïó‚îå‚îÄ‚îê‚î¨ ‚î¨‚îå‚î¨‚îê‚îå‚îÄ‚îê  ‚ï¶‚ïê‚ïó‚î¨ ‚î¨‚îå‚îÄ‚îê
    ‚ï†‚ï¶‚ïù‚îÇ ‚îÇ‚îÇ ‚îÇ ‚îÇ ‚îú‚î§   ‚ï†‚ï¶‚ïù‚îÇ ‚îÇ‚îî‚îÄ‚îê
    ‚ï©‚ïö‚ïê‚îî‚îÄ‚îò‚îî‚îÄ‚îò ‚î¥ ‚îî‚îÄ‚îò  ‚ï©‚ïö‚ïê‚îî‚îÄ‚îò‚îî‚îÄ‚îò
        üõ°Ô∏è  VPN Obfuscation  üõ°Ô∏è
EOF
    echo -e "${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env
check_env_exists() {
    if [[ -f "$ENV_FILE" ]]; then
        echo -e "${YELLOW}–ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª${NC}"
        echo -e "${BLUE}1)${NC} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        echo -e "${BLUE}2)${NC} –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        echo -e "${BLUE}3)${NC} –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é"
        echo
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-3): " choice

        case $choice in
            1)
                echo -e "${GREEN}–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è${NC}"
                return 0
                ;;
            2)
                echo -e "${YELLOW}–°–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è...${NC}"
                rm -f "$ENV_FILE"
                ;;
            3)
                echo -e "${BLUE}–†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏${NC}"
                return 2
                ;;
            *)
                echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è${NC}"
                rm -f "$ENV_FILE"
                ;;
        esac
    fi
    return 1
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
generate_random_values() {
    # Magic headers (—Å–ª—É—á–∞–π–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 50 –¥–æ 200)
    S1=$((RANDOM % 150 + 50))
    S2=$((RANDOM % 150 + 50))

    # Magic hashes (—Å–ª—É—á–∞–π–Ω—ã–µ 10-–∑–Ω–∞—á–Ω—ã–µ —á–∏—Å–ª–∞)
    H1=$(openssl rand -hex 5 | tr 'a-f' '0-9')
    H2=$(openssl rand -hex 5 | tr 'a-f' '0-9')
    H3=$(openssl rand -hex 5 | tr 'a-f' '0-9')
    H4=$(openssl rand -hex 5 | tr 'a-f' '0-9')

    echo -e "${GREEN}–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏:${NC}"
    echo -e "  S1: ${CYAN}$S1${NC}, S2: ${CYAN}$S2${NC}"
    echo -e "  H1: ${CYAN}$H1${NC}, H2: ${CYAN}$H2${NC}"
    echo -e "  H3: ${CYAN}$H3${NC}, H4: ${CYAN}$H4${NC}"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
generate_password() {
    local length=${1:-16}
    openssl rand -base64 $length | tr -d "=+/" | cut -c1-$length
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP
get_external_ip() {
    local ip
    ip=$(curl -s https://ipinfo.io/ip 2>/dev/null || curl -s https://api.ipify.org 2>/dev/null || curl -s https://ifconfig.me 2>/dev/null)
    echo "$ip"
}

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
interactive_setup() {
    echo -e "${YELLOW}=== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WireGuard Obfuscation Setup ===${NC}"
    echo

    # –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP
    external_ip=$(get_external_ip)
    if [[ -n "$external_ip" ]]; then
        echo -e "${GREEN}–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤–Ω–µ—à–Ω–∏–π IP: $external_ip${NC}"
        read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç IP –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –¥–æ–º–µ–Ω? [IP/–¥–æ–º–µ–Ω]: " server_choice
        if [[ "$server_choice" =~ ^[Dd] ]]; then
            read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω: " SERVER_ENDPOINT
        else
            SERVER_ENDPOINT="$external_ip"
        fi
    else
        read -p "–í–≤–µ–¥–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–π IP –∞–¥—Ä–µ—Å –∏–ª–∏ –¥–æ–º–µ–Ω —Å–µ—Ä–≤–µ—Ä–∞: " SERVER_ENDPOINT
    fi

    while [[ -z "$SERVER_ENDPOINT" ]]; do
        echo -e "${RED}–ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º${NC}"
        read -p "–í–≤–µ–¥–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–π IP –∞–¥—Ä–µ—Å –∏–ª–∏ –¥–æ–º–µ–Ω —Å–µ—Ä–≤–µ—Ä–∞: " SERVER_ENDPOINT
    done

    # –ü–∞—Ä–æ–ª—å –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    echo
    echo -e "${BLUE}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ wg-easy${NC}"
    suggested_password=$(generate_password 12)
    echo -e "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å: ${GREEN}$suggested_password${NC}"
    read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π –ø–∞—Ä–æ–ª—å? [y/n]: " use_suggested

    if [[ "$use_suggested" =~ ^[Yy] ]]; then
        WG_EASY_PASSWORD="$suggested_password"
        echo -e "${GREEN}–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å${NC}"
    else
        read -s -p "–í–≤–µ–¥–∏—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å (–º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤): " WG_EASY_PASSWORD
        echo
        while [[ ${#WG_EASY_PASSWORD} -lt 8 ]]; do
            echo -e "${RED}–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤${NC}"
            read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: " WG_EASY_PASSWORD
            echo
        done
    fi

    # –ü–æ—Ä—Ç—ã
    echo
    echo -e "${BLUE}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–æ–≤${NC}"
    read -p "–ü–æ—Ä—Ç –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 51821): " WEB_PORT
    WEB_PORT=${WEB_PORT:-51821}

    read -p "–ü–æ—Ä—Ç –¥–ª—è WireGuard (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 51820): " WG_PORT
    WG_PORT=${WG_PORT:-51820}

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS
    echo
    echo -e "${CYAN}=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AdGuard DNS ===${NC}"
    echo "AdGuard DNS –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ–∫–ª–∞–º—É, —Ç—Ä–µ–∫–µ—Ä—ã –∏ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ —Å–∞–π—Ç—ã"
    echo
    echo -e "${BLUE}1)${NC} –£ –º–µ–Ω—è –µ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AdGuard DNS (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
    echo -e "${BLUE}2)${NC} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–µ AdGuard DNS —Å–µ—Ä–≤–µ—Ä—ã"
    echo -e "${BLUE}3)${NC} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Google DNS (–±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã)"
    echo

    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-3): " dns_choice

    case $dns_choice in
        1)
            echo -e "${BLUE}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ AdGuard DNS${NC}"
            echo "–ü–æ–ª—É—á–∏—Ç–µ –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ DNS –Ω–∞: https://adguard-dns.io/"
            echo
            read -p "DNS-over-HTTPS URL: " ADGUARD_DNS_HTTPS
            read -p "DNS-over-TLS URL: " ADGUARD_DNS_TLS
            read -p "–ü–µ—Ä–≤–∏—á–Ω—ã–π DNS IP (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º): " ADGUARD_DNS_IP1
            read -p "–í—Ç–æ—Ä–∏—á–Ω—ã–π DNS IP (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º): " ADGUARD_DNS_IP2

            # –ï—Å–ª–∏ IP –Ω–µ —É–∫–∞–∑–∞–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ
            ADGUARD_DNS_IP1=${ADGUARD_DNS_IP1:-94.140.14.14}
            ADGUARD_DNS_IP2=${ADGUARD_DNS_IP2:-94.140.15.15}
            ;;
        2)
            echo -e "${BLUE}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö AdGuard DNS —Å–µ—Ä–≤–µ—Ä–æ–≤${NC}"
            ADGUARD_DNS_IP1="94.140.14.14"
            ADGUARD_DNS_IP2="94.140.15.15"
            ADGUARD_DNS_HTTPS="https://dns.adguard-dns.com/dns-query"
            ADGUARD_DNS_TLS="tls://dns.adguard-dns.com"
            ;;
        3)
            echo -e "${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Google DNS (–±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã)${NC}"
            ADGUARD_DNS_IP1="8.8.8.8"
            ADGUARD_DNS_IP2="8.8.4.4"
            ADGUARD_DNS_HTTPS=""
            ADGUARD_DNS_TLS=""
            ;;
        *)
            echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—É–±–ª–∏—á–Ω—ã–µ AdGuard DNS${NC}"
            ADGUARD_DNS_IP1="94.140.14.14"
            ADGUARD_DNS_IP2="94.140.15.15"
            ADGUARD_DNS_HTTPS="https://dns.adguard-dns.com/dns-query"
            ADGUARD_DNS_TLS="tls://dns.adguard-dns.com"
            ;;
    esac

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏
    echo
    echo -e "${PURPLE}=== –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏ AmneziaWG ===${NC}"
    echo "–≠—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ª–∞—é—Ç VPN —Ç—Ä–∞—Ñ–∏–∫ –Ω–µ—Ä–∞–∑–ª–∏—á–∏–º—ã–º –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ"
    echo
    echo -e "${BLUE}1)${NC} –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
    echo -e "${BLUE}2)${NC} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä—É—á–Ω—É—é"
    echo

    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-2): " obf_choice

    if [[ "$obf_choice" == "2" ]]; then
        echo -e "${BLUE}–†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏${NC}"
        read -p "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º—É—Å–æ—Ä–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ (1-10, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5): " JC
        JC=${JC:-5}

        read -p "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –º—É—Å–æ—Ä–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ (50-500, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100): " JMIN
        JMIN=${JMIN:-100}

        read -p "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –º—É—Å–æ—Ä–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ (500-2000, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1000): " JMAX
        JMAX=${JMAX:-1000}

        generate_random_values
    else
        echo -e "${GREEN}–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏${NC}"
        JC=5
        JMIN=100
        JMAX=1000
        generate_random_values
    fi

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    echo
    echo -e "${CYAN}=== –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ===${NC}"

    read -p "–í–∫–ª—é—á–∏—Ç—å Cloak –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏? [y/n]: " enable_cloak
    if [[ "$enable_cloak" =~ ^[Yy] ]]; then
        CLOAK_ENABLED="true"
        echo -e "${GREEN}Cloak –±—É–¥–µ—Ç –≤–∫–ª—é—á–µ–Ω${NC}"

        # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä Cloak –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if [[ -f "scripts/setup-cloak.sh" ]]; then
            echo -e "${BLUE}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cloak –æ–±—Ñ—É—Å–∫–∞—Ü–∏–∏...${NC}"
            chmod +x scripts/setup-cloak.sh
            ./scripts/setup-cloak.sh
        else
            echo -e "${YELLOW}–°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Cloak –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–∑–∂–µ${NC}"
        fi
    else
        CLOAK_ENABLED="false"
    fi

    read -p "–í–∫–ª—é—á–∏—Ç—å –≤–µ–±-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ –ø–æ—Ä—Ç—É 8080? [y/n]: " enable_stats
    if [[ "$enable_stats" =~ ^[Yy] ]]; then
        STATS_PORT="8080"
        echo -e "${GREEN}–í–µ–±-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ :8080${NC}"
    else
        STATS_PORT=""
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
create_env_file() {
    echo -e "${BLUE}–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞...${NC}"

    cat > "$ENV_FILE" << EOF
# WireGuard Maximum Obfuscation Setup - Environment Variables
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: $(date)

# =================
# –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
# =================
SERVER_ENDPOINT=$SERVER_ENDPOINT
WG_EASY_PASSWORD=$WG_EASY_PASSWORD
WEB_PORT=$WEB_PORT
WG_PORT=$WG_PORT
WG_SUBNET=10.8.0.x
WG_ALLOWED_IPS=0.0.0.0/0
WG_KEEPALIVE=25
WG_MTU=1280

# ======================
# –ü–ê–†–ê–ú–ï–¢–†–´ –û–ë–§–£–°–ö–ê–¶–ò–ò
# ======================
JC=$JC
JMIN=$JMIN
JMAX=$JMAX
S1=$S1
S2=$S2
H1=$H1
H2=$H2
H3=$H3
H4=$H4

# ===============
# DNS –ù–ê–°–¢–†–û–ô–ö–ò
# ===============
ADGUARD_DNS_IP1=$ADGUARD_DNS_IP1
ADGUARD_DNS_IP2=$ADGUARD_DNS_IP2
ADGUARD_DNS_HTTPS=$ADGUARD_DNS_HTTPS
ADGUARD_DNS_TLS=$ADGUARD_DNS_TLS

# ===================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–û–†–¢–´
# ===================
STATS_PORT=${STATS_PORT:-8080}
CLOAK_ENABLED=$CLOAK_ENABLED
CLOAK_HTTPS_PORT=8443
CLOAK_HTTP_PORT=8080

# =================
# –ì–ï–ù–ï–†–ê–¶–ò–Ø –ö–û–ù–§–ò–ì–û–í
# =================
MOBILE_KEEPALIVE=25
MOBILE_MTU=1280
ROUTER_KEEPALIVE=0
ROUTER_MTU=1420
DESKTOP_KEEPALIVE=0
DESKTOP_MTU=1420

# ==================
# –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨
# ==================
AUTO_KEY_ROTATION_DAYS=30
MAX_CLIENTS=50
ENABLE_LOGGING=true
LOG_LEVEL=info

# =================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û
# =================
LANG=ru
UI_TRAFFIC_STATS=true
UI_CHART_TYPE=2
WG_ENABLE_ONE_TIME_LINKS=true
DOMAIN=$SERVER_ENDPOINT
LETSENCRYPT_EMAIL=admin@$SERVER_ENDPOINT
EOF

    echo -e "${GREEN}.env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
show_summary() {
    echo
    echo -e "${CYAN}===============================================${NC}"
    echo -e "${GREEN}    –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${CYAN}===============================================${NC}"
    echo
    echo -e "${YELLOW}–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:${NC}"
    echo -e "  –°–µ—Ä–≤–µ—Ä: ${BLUE}$SERVER_ENDPOINT${NC}"
    echo -e "  –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: ${BLUE}http://$SERVER_ENDPOINT:$WEB_PORT${NC}"
    echo -e "  –ü–∞—Ä–æ–ª—å: ${PURPLE}$WG_EASY_PASSWORD${NC}"
    echo -e "  WireGuard –ø–æ—Ä—Ç: ${BLUE}$WG_PORT${NC}"
    echo
    echo -e "${YELLOW}DNS —Å–µ—Ä–≤–µ—Ä—ã:${NC}"
    echo -e "  –ü–µ—Ä–≤–∏—á–Ω—ã–π: ${BLUE}$ADGUARD_DNS_IP1${NC}"
    echo -e "  –í—Ç–æ—Ä–∏—á–Ω—ã–π: ${BLUE}$ADGUARD_DNS_IP2${NC}"
    echo
    echo -e "${YELLOW}–û–±—Ñ—É—Å–∫–∞—Ü–∏—è AmneziaWG:${NC}"
    echo -e "  JC=${BLUE}$JC${NC}, JMIN=${BLUE}$JMIN${NC}, JMAX=${BLUE}$JMAX${NC}"
    echo -e "  S1=${BLUE}$S1${NC}, S2=${BLUE}$S2${NC}"
    echo
    echo -e "${YELLOW}–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:${NC}"
    echo -e "  Cloak: ${BLUE}$CLOAK_ENABLED${NC}"
    if [[ -n "$STATS_PORT" ]]; then
        echo -e "  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${BLUE}http://$SERVER_ENDPOINT:$STATS_PORT${NC}"
    fi
    echo
    echo -e "${GREEN}–¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ${CYAN}docker-compose up -d${NC}"
    echo -e "${CYAN}===============================================${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    show_logo

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env
    env_status=1
    check_env_exists && env_status=$?

    if [[ $env_status -eq 0 ]]; then
        echo -e "${GREEN}–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è${NC}"
        echo -e "${BLUE}–ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose up -d${NC}"
        return 0
    elif [[ $env_status -eq 2 ]]; then
        echo -e "${YELLOW}–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: nano .env${NC}"
        return 0
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —à–∞–±–ª–æ–Ω–∞
    if [[ ! -f "$ENV_EXAMPLE" ]]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª $ENV_EXAMPLE${NC}"
        exit 1
    fi

    interactive_setup
    create_env_file
    show_summary
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'echo -e "${RED}–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $LINENO${NC}"; exit 1' ERR

# –ó–∞–ø—É—Å–∫
main "$@"
