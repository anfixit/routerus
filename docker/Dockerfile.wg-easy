# WireGuard Easy с поддержкой AmneziaWG обфускации
FROM node:18-alpine AS build

# Установка зависимостей для сборки
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++ \
    linux-headers

# Клонирование и сборка wg-easy
WORKDIR /app
RUN git clone https://github.com/wg-easy/wg-easy.git .
RUN npm ci --only=production

# Основной образ
FROM alpine:latest

# Установка зависимостей
RUN apk add --no-cache \
    nodejs \
    npm \
    wireguard-tools \
    iptables \
    ip6tables \
    curl \
    bash \
    jq \
    qrencode \
    openssl \
    sudo \
    dumb-init

# Копирование wg-easy
COPY --from=build /app /app
WORKDIR /app

# Создание пользователя
RUN addgroup -g 1000 wg-easy \
    && adduser -u 1000 -G wg-easy -s /bin/bash -D wg-easy \
    && echo "wg-easy ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/wg-easy

# Создание директорий
RUN mkdir -p /etc/wireguard \
    && mkdir -p /app/scripts \
    && mkdir -p /app/templates \
    && mkdir -p /app/config \
    && chown -R wg-easy:wg-easy /etc/wireguard /app

# Создание базовых скриптов
RUN cat > /app/start.sh << 'EOF'
#!/bin/bash
echo "Запуск RouteRus VPN..."
# Включение IP forwarding
echo 1 > /proc/sys/net/ipv4/ip_forward
# Запуск wg-easy
exec node server.js
EOF

RUN chmod +x /app/start.sh

# Переключение на пользователя
USER wg-easy

# Экспорт портов
EXPOSE 51820/udp 51821/tcp

# Volumes - templates будут монтироваться извне
VOLUME ["/etc/wireguard"]

# Точка входа
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
CMD ["/app/start.sh"]

# Метаданные
LABEL maintainer="RouteRus VPN Team"
LABEL description="WireGuard Easy with RouteRus VPN support"
LABEL version="1.0"
